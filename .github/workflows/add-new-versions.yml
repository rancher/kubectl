name: Add new versions
on:
  workflow_dispatch:
  schedule:
    - cron:  '0 9 * * 1,5'

permissions:
  contents: write
  pull-requests: write
jobs:
  add-new-versions:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3 # v3.5.0
      - name: Run add-new-versions.sh
        id: run
        run: |
          bash scripts/add-new-versions.sh > add-new-versions.output
          if grep -q ^Added add-new-versions.output; then
            new_versions=$(grep ^Added add-new-versions.output)
            echo "new_versions=${new_versions}" >> $GITHUB_OUTPUT
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Check for repository changes
        run: |
          if git diff --name-only --exit-code; then
            echo "No changes found in repository"
            echo "changes_exist=false" >> $GITHUB_ENV
          else
            echo "Changes found in repository"
            git diff --name-only
            echo "changes_exist=true" >> $GITHUB_ENV
          fi
      - name: Create branch, commit and push
        if: ${{ env.changes_exist == 'true' }}
        id: branch
        run: |
          BRANCH="githubaction-add-new-versions-$(date +%Y-%m-%d-%H-%M-%S)"
          echo "branch=${BRANCH}" >> $GITHUB_OUTPUT
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git checkout -b "$BRANCH"
          git commit -a -m "Adding new versions"
          git push origin "$BRANCH"
      - name: Create Pull Request
        if: ${{ env.changes_exist == 'true' }}
        id: cpr
        env:
          SOURCE_BRANCH: ${{ steps.branch.outputs.branch }}
          NEW_VERSIONS: ${{ steps.run.outputs.new_versions }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_TITLE: "Adding new versions"
        run: |
          EXISTING_PR=$(gh pr list --limit 500 --json title,url | jq --arg title "${PR_TITLE}" -r '.[] | select(.title==$title) | .url')
          PR_BODY="$(echo -e ${NEW_VERSIONS}\\n\\nAuto-generated by GitHub Actions, initiated by @${GITHUB_ACTOR}\\n)"
          CREATED_PR=$(gh pr create --title "${PR_TITLE}" --body "${PR_BODY}" --label "status/auto-created" --base "${GITHUB_REF_NAME}" --head "${SOURCE_BRANCH}")
          echo "Created pull request: ${CREATED_PR}" >> $GITHUB_STEP_SUMMARY
          if [ -n "${EXISTING_PR}" ]; then
              gh pr close --comment "Superseded by ${CREATED_PR}" --delete-branch "${EXISTING_PR}"
              echo "Closed previous pull request: ${EXISTING_PR}" >> $GITHUB_STEP_SUMMARY
          fi
